Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Flicker\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".Detail\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Desats\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Profile\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Movies\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Register\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Login\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision a443cffce4749886f1badd2fe7eb3a116622e193)
+++ b/app/src/main/AndroidManifest.xml	(date 1737487389053)
@@ -16,9 +16,6 @@
             android:name=".Detail"
             android:exported="false" />
         <activity
-            android:name=".Desats"
-            android:exported="false" />
-        <activity
             android:name=".Profile"
             android:exported="false" />
         <activity
Index: app/src/main/java/com/example/flicker/Profile.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.flicker\r\n\r\nimport android.content.SharedPreferences\r\nimport android.os.Bundle\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.appcompat.app.AppCompatDelegate\r\nimport android.widget.Switch\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.core.view.ViewCompat\r\nimport androidx.core.view.WindowInsetsCompat\r\n\r\nclass Profile : AppCompatActivity() {\r\n    private lateinit var sharedPreferences: SharedPreferences\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        setContentView(R.layout.activity_profile)\r\n        // Obtener preferencias y aplicar el tema antes de crear la actividad\r\n        sharedPreferences = getSharedPreferences(\"AppPreferences\", MODE_PRIVATE)\r\n        val isDarkMode = sharedPreferences.getBoolean(\"isDarkMode\", false)\r\n        AppCompatDelegate.setDefaultNightMode(\r\n            if (isDarkMode) AppCompatDelegate.MODE_NIGHT_YES else AppCompatDelegate.MODE_NIGHT_NO\r\n        )\r\n\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_profile)\r\n\r\n        // Configuración de bordes\r\n        //enableEdgeToEdge()\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.mainContent)) { v, insets ->\r\n            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)\r\n            insets\r\n        }\r\n\r\n        // Configurar Switch de Dark Mode\r\n        val switchDarkMode = findViewById<Switch>(R.id.switchDarkMode)\r\n        switchDarkMode.isChecked = isDarkMode\r\n\r\n        switchDarkMode.setOnCheckedChangeListener { _, isChecked ->\r\n            // Cambiar el tema según el estado del Switch\r\n            if (isChecked) {\r\n                AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES)\r\n            } else {\r\n                AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)\r\n            }\r\n            // Guardar el estado en SharedPreferences\r\n            sharedPreferences.edit().putBoolean(\"isDarkMode\", isChecked).apply()\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/flicker/Profile.kt b/app/src/main/java/com/example/flicker/Profile.kt
--- a/app/src/main/java/com/example/flicker/Profile.kt	(revision a443cffce4749886f1badd2fe7eb3a116622e193)
+++ b/app/src/main/java/com/example/flicker/Profile.kt	(date 1737487672530)
@@ -1,5 +1,6 @@
 package com.example.flicker
 
+import android.annotation.SuppressLint
 import android.content.SharedPreferences
 import android.os.Bundle
 import androidx.appcompat.app.AppCompatActivity
@@ -12,6 +13,7 @@
 class Profile : AppCompatActivity() {
     private lateinit var sharedPreferences: SharedPreferences
 
+    @SuppressLint("MissingSuperCall")
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         enableEdgeToEdge()
@@ -19,9 +21,6 @@
         // Obtener preferencias y aplicar el tema antes de crear la actividad
         sharedPreferences = getSharedPreferences("AppPreferences", MODE_PRIVATE)
         val isDarkMode = sharedPreferences.getBoolean("isDarkMode", false)
-        AppCompatDelegate.setDefaultNightMode(
-            if (isDarkMode) AppCompatDelegate.MODE_NIGHT_YES else AppCompatDelegate.MODE_NIGHT_NO
-        )
 
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_profile)
Index: app/src/main/java/com/example/flicker/SplashActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/flicker/SplashActivity.kt b/app/src/main/java/com/example/flicker/SplashActivity.kt
new file mode 100644
--- /dev/null	(date 1737486814220)
+++ b/app/src/main/java/com/example/flicker/SplashActivity.kt	(date 1737486814220)
@@ -0,0 +1,30 @@
+import android.content.Intent
+import android.os.Bundle
+import android.view.animation.Animation
+import android.view.animation.AnimationUtils
+import android.widget.ImageView
+import androidx.appcompat.app.AppCompatActivity
+//import com.example.flicker.MainActivity
+import com.example.flicker.R
+
+class SplashActivity : AppCompatActivity() {
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_splash)
+        val logoImageView = findViewById<ImageView>(R.id.logo)
+
+        // Cargar la animación
+        val pumpBounceAnimation = AnimationUtils.loadAnimation(this, R.anim.fade_in)
+        logoImageView.startAnimation(pumpBounceAnimation)
+
+        // Navegar a la siguiente pantalla después de la animación
+        pumpBounceAnimation.setAnimationListener(object : Animation.AnimationListener {
+            override fun onAnimationStart(animation: android.view.animation.Animation?) {}
+            override fun onAnimationEnd(animation: android.view.animation.Animation?) {
+                //startActivity(Intent(this@SplashActivity, MainActivity::class.java))
+                finish()
+            }
+            override fun onAnimationRepeat(animation: android.view.animation.Animation?) {}
+        })
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_splash.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_splash.xml b/app/src/main/res/layout/activity_splash.xml
new file mode 100644
--- /dev/null	(date 1737486584166)
+++ b/app/src/main/res/layout/activity_splash.xml	(date 1737486584166)
@@ -0,0 +1,13 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/md_theme_error_mediumContrast"
+    android:gravity="center">
+
+    <ImageView
+        android:id="@+id/logo"
+        android:layout_width="200dp"
+        android:layout_height="200dp"
+        android:src="@drawable/ic_logo"
+        android:contentDescription="@string/app_name" />
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/anim/fade_in.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/anim/fade_in.xml b/app/src/main/res/anim/fade_in.xml
new file mode 100644
--- /dev/null	(date 1737486584203)
+++ b/app/src/main/res/anim/fade_in.xml	(date 1737486584203)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android"
+    android:interpolator="@android:interpolator/bounce">
+    <scale
+        android:duration="2000"
+        android:fromXScale="0.0"
+        android:fromYScale="0.0"
+        android:toXScale="1.0"
+        android:toYScale="1.0"
+        android:pivotX="50%"
+        android:pivotY="50%"
+        />
+</set>
\ No newline at end of file
